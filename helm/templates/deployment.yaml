apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
  labels:
    app: {{ .Values.appName }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.maxUnavailable }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec:
      containers:
      - name: {{ .Values.appName }}
        image: {{ .Values.image }}:{{ .Values.appVersion }}
        ports:              # port where your container listens
        - containerPort: {{ .Values.containerPort }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.containerPort }}
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.containerPort }}
          initialDelaySeconds: 30
          periodSeconds: 60
        resources:
          requests:
          memory: {{ .Values.memReq }}
          cpu: "{{ .Values.cpuReq }}"
          limits:
            memory: {{ .Values.memLimit }}
            cpu: "{{ .Values.cpuLimit }}"
        envFrom:  
          - configMapRef:
              name: {{ .Values.appName }}-cm



